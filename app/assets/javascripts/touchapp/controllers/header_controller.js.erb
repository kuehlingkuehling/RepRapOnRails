touchApp.controller('HeaderController', function($scope, $location, $timeout, $modal, MyWebsocket){
  console.log("Running HeaderController");
  
  $scope.$watch(function(){ return MyWebsocket.print; }, function(newValue){
    $scope.print = MyWebsocket.print;  
  }, true);  
  
  $scope.$watch(function(){ return MyWebsocket.menuDisabled; }, function(newValue){
    $scope.menuDisabled = MyWebsocket.menuDisabled;  
  }, true);    
   
  $scope.$on('$locationChangeSuccess', function(event) {
    $scope.path = $location.path();
    $scope.tab = $scope.path.substr(1, $scope.path.length);
  });  
  $scope.go = function( tab ){
    $location.path( "/" + tab );
  };
  
  $scope.emergencyStop = function(){
    MyWebsocket.emergencystop();
  };
  
  $scope.progress = 0;

  // update progress every 3s
  (function update_progress() {
      MyWebsocket.get('progress').then(function(data){
        $scope.progress = data.percent;
        $scope.time_remaining = data.time_remaining;
        //console.log("The received Progress is:" + data)
        $timeout(update_progress, 3000);        
      });  
  })(); 
  
  $scope.abortprint = function() {
    MyWebsocket.abortprint();
  };  
  
  $scope.pauseprint = function() {
    MyWebsocket.pauseprint();    
    MyWebsocket.macro("maintenance_position");    
  };    
  
  $scope.resumeprint = function() {
    MyWebsocket.resumeprint();
    $scope.go("queue");
  };

  $scope.shutdown = function(){
    // open cooldown dialog
    var shutdownModal = $modal.open({
      templateUrl: '<%= asset_path("touchapp/templates/dialog_shutdown.html") %>', // statically included in backendapp.html.erb
      controller: 'DialogShutdownController',
      backdrop: 'static'
    });    
  };     

  $scope.$watch(function(){ return MyWebsocket.print; }, function(newValue){
    if (( MyWebsocket.print.state == 2) || ( MyWebsocket.print.state == 3 ) || ( MyWebsocket.print.state == 5 )) {
      $scope.printing = true;
    } else {
      $scope.printing = false;      
    }    
  }, true);    
  
  $scope.$watch(function(){ return MyWebsocket.print; }, function(newValue){
    $scope.print = MyWebsocket.print;
    if (MyWebsocket.print.state == 1) {
      $scope.idle = true;
    } else {
      $scope.idle = false;      
    }    
  }, true);   

  $scope.psu_on = function(){
    MyWebsocket.psu_on();    
  };   
  
  $scope.psu_off = function(state){
    // open cooldown dialog
    var cooldownModal = $modal.open({
      templateUrl: '<%= asset_path("touchapp/templates/dialog_cooldown.html") %>', // statically included in backendapp.html.erb
      controller: 'DialogCooldownController',
      backdrop: 'static'
    });       
  };

  $scope.$watch(function(){ return MyWebsocket.preheatingProfile; }, function(){
    $scope.preheatingProfile = MyWebsocket.preheatingProfile;
  },true);  

  $scope.preheat_on = function(){
    MyWebsocket.preheat($scope.preheatingProfile.chamber_temp, $scope.preheatingProfile.bed_temp);    
  };  

  $scope.preheat_off = function(){
    MyWebsocket.preheat(0,0);    
  };  

  $scope.$watch(function(){ return MyWebsocket.temp; }, function(){
    $scope.temp = MyWebsocket.temp;
  },true);     
});